# Set another default user than root for security reasons
user www-data;

# As a thumb rule: One per CPU. If you are serving a large amount
# of static files, which requires blocking disk reads, you may want
# to increase this from the number of cpu_cores available on your
# system.
#
# The maximum number of connections for Nginx is calculated by:
# max_clients = worker_processes * worker_connections

worker_processes 2;
daemon off;

# Maximum file descriptors that can be opened per process
# This should be > worker_connections

worker_rlimit_nofile 8192;

events {
  # When you need > 8000 * cpu_cores connections, you start optimizing
  # your OS, and this is probably the point at where you hire people
  # who are smarter than you, this is *a lot* of requests.

  worker_connections  8000;
}

# Change these paths to somewhere that suits you!
pid ../../var/nginx.pid;
error_log ../../var/log/nginx.error.log;

http {
  # Set the mime-types via the mime.types external file
  include       nginx-mime.types;

  # XXX: Change on production
  ssl_certificate       ssl/localhost.crt;
  ssl_certificate_key  ssl/localhost.key;
  map $scheme $server_https {
     default off;
     https on;
  }

  # And the fallback mime-type
  default_type  application/octet-stream;

  # Format for our log files
  #log_format   main '[$time_local] - $remote_addr - $body_bytes_sent '
  #  '$request_method "$request" $status "$http_x_oauth_username"';

  # Click tracking!
  access_log   ../../var/log/nginx.access.log;

  # ~2 seconds is often enough for HTML/CSS, but connections in
  # Nginx are cheap, so generally it's safe to increase it
  keepalive_timeout 20;

  # You usually want to serve static files with Nginx
  sendfile on;

  tcp_nopush on; # off may be better for Comet/long-poll stuff
  tcp_nodelay off; # on may be better for Comet/long-poll stuff

  # Enable Gzip:
  gzip on;
  gzip_http_version 1.0;
  gzip_comp_level 5;
  gzip_min_length 512;
  gzip_buffers 4 8k;
  gzip_proxied any;
  gzip_types
    # text/html is always compressed by HttpGzipModule
    text/css
    text/javascript
    text/xml
    text/plain
    text/x-component
    application/javascript
    application/x-javascript
    application/json
    application/xml
    application/rss+xml
    font/truetype
    font/opentype
    application/vnd.ms-fontobject
    image/svg+xml;

  # This should be turned on if you are going to have pre-compressed copies (.gz) of
  # static files available. If not it should be left off as it will cause extra I/O
  # for the check. It would be better to enable this in a location {} block for
  # a specific directory:
  # gzip_static on;

  gzip_disable        "MSIE [1-6]\.";
  gzip_vary           on;

  upstream app_server {
    # server unix:/tmp/gunicorn.sock fail_timeout=0;
    # For a TCP configuration:
    server 127.0.0.1:8084 fail_timeout=0;
  }

  upstream restserver {
    server senyalets.upc.edu:8080 fail_timeout=0;
  }

  client_max_body_size 4G;

  # Servidor port 80, redireccio a 443 HTTPS
  server {
      listen      80;
      # XXX: Change on production
      # server_name oauth.upc.edu;
      server_name senyalada.upc.edu;
      # En el cas que volguem redireccionar a https
      #rewrite ^(.*)$ https://$server_name$1 last;

      ###############################################################
      # Finally, the location of the application

      location /rest {
           proxy_redirect off;
           rewrite ^/rest/(.*)$ /ArtsCombinatoriesRest/$1 break;
           proxy_pass http://restserver;
      }

      location / {
          # checks for static file, if not found proxy to app
          try_files $uri @proxy_to_app;
      }

      location @proxy_to_app {
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header Host $http_host;
          proxy_redirect off;

          rewrite ^/(.*)$ /VirtualHostBase/http/senyalada.upc.edu:80/fatac/VirtualHostRoot/$1 break;
          proxy_pass   http://app_server;
          proxy_connect_timeout 75;
          proxy_read_timeout 185;
      }
  }

  # Servidor port 443
  server {
    # listen 80 default_server deferred; # for Linux
    # listen 80 default_server accept_filter=httpready; # for FreeBSD
    listen 443 default_server deferred;
    ssl on;

    # e.g. "localhost" to accept all connections, or "www.example.com"
    # to handle the requests for "example.com" (and www.example.com)
    # XXX: Change on production
    # server_name oauth.upc.edu;
    server_name senyalada.upc.edu;

    # Path for static files
    root ../../static/;

    #Specify a charset
    charset utf-8;

    # Custom 404 page
    error_page 404 ../../static/404.html;

    ###############################################################
    # Finally, the location of the application
    location / {
        # checks for static file, if not found proxy to app
        try_files $uri @proxy_to_app;
    }

    location @proxy_to_app {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;

        rewrite ^/(.*)$ /VirtualHostBase/https/senyalada.upc.edu:443/fatac/VirtualHostRoot/$1 break;
        proxy_pass   http://app_server;
        proxy_connect_timeout 75;
        proxy_read_timeout 185;
    }

  }
}

