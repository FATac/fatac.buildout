[buildout]
parts =
    instance
    zopepy
#    i18ndude
#    zopeskel
    test
    omelette
    supervisor
    nginx

extends =
    http://dist.plone.org/release/4.2-latest/versions.cfg
#    http://good-py.appspot.com/release/dexterity/1.0.3?plone=4.1.5
    versions.cfg

# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =
    http://dist.plone.org/release/4.2-latest
    http://dist.plone.org/thirdparty

extensions =
    mr.developer
    buildout.dumppickedversions

sources = sources

versions = versions

auto-checkout = *

# Reference any folders where you have Python egg source code under development here
# e.g.: develop = src/my.package
# If you are using the mr.developer extension and have the source code in a
# repository mr.developer will handle this automatically for you
develop =

[downloads]
tomcat = http://apache.rediris.es/tomcat/tomcat-7/v7.0.23/bin/apache-tomcat-7.0.23.tar.gz
virtuoso = http://downloads.sourceforge.net/project/virtuoso/virtuoso/6.1.3/virtuoso-opensource-6.1.3.tar.gz?r=&ts=1306764172&use_mirror=kent
nginx = http://nginx.org/download/nginx-1.2.0.tar.gz

# Create bin/instance command to manage Zope start up and shutdown
[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8084
debug-mode = off
verbose-security = on
blob-storage = var/blobstorage
effective-user = plone

eggs =
    Plone
    plone.reload
    fatac.core
    fatac.theme
    fatac.forms
    fatac.content
    Products.LinguaPlone
    plone.app.debugtoolbar
    plone.app.jquerytools

# Some pre-Plone 3.3 packages may need you to register the package name here in
# order their configure.zcml to be run (http://plone.org/products/plone/roadmap/247)
# - this is never required for packages in the Products namespace (Products.*)
zcml =

[nginx]
recipe = hexagonit.recipe.cmmi
ignore-existing = true
url = ${downloads:nginx}
configure-options =
    --with-http_stub_status_module
    --with-http_ssl_module
    --conf-path=${buildout:directory}/production/nginx/default.conf
    --error-log-path=${buildout:directory}/var/log/nginx-error.log
    --pid-path=${buildout:directory}/var/nginx.pid
    --lock-path=${buildout:directory}/var/nginx.lock

[tomcat]
recipe = hexagonit.recipe.download
url = ${downloads:tomcat}
destination = ${buildout:directory}/servers/tomcat

[virtuoso-build]
recipe = hexagonit.recipe.cmmi
url = ${downloads:virtuoso}
prefix = ${buildout:directory}/servers/virtuoso
keep-compile-dir = True

# zopepy commands allows you to execute Python scripts using a PYTHONPATH
# including all the configured eggs
[zopepy]
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = zopepy
scripts = zopepy

# create bin/i18ndude command
# [i18ndude]
# unzip = true
# recipe = zc.recipe.egg
# eggs = i18ndude

# create bin/test command
[test]
recipe = zc.recipe.testrunner
defaults = ['-v','--auto-color', '--auto-progress', '-s', 'fatac.core']
eggs =
    fatac.core
    fatac.theme
    fatac.forms
    fatac.content

# create ZopeSkel command
# [zopeskel]
# unzip = true
# recipe = zc.recipe.egg
# eggs =
#     ZopeSkel
#     ${instance:eggs}

# symlinks all Python source code to parts/omelette folder when buildout is run
# windows users will need to install additional software for this part to build
# correctly.  See http://pypi.python.org/pypi/collective.recipe.omelette for
# relevant details.
[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}

# Put your mr.developer managed source code repositories here, see
# http://pypi.python.org/pypi/mr.developer for details on format for this part
[sources]
#collective.developermanual = svn http://svn.plone.org/svn/collective/collective.developermanual
fatac.core = git https://github.com/FATac/fatac.core.git branch=develop
fatac.theme = git https://github.com/FATac/fatac.theme.git branch=develop
fatac.theme = git https://github.com/FATac/fatac.theme.git branch=develop
fatac.forms = git https://github.com/FATac/fatac.forms.git branch=develop
fatac.content = git https://github.com/FATac/fatac.content.git branch=master

[supervisor]
recipe = collective.recipe.supervisor
port = 9101
user = admin
password = admin
serverurl = http://localhost:9101
programs =
    10 instance ${buildout:directory}/bin/instance [console]
    30 nginx ${nginx:location}/sbin/nginx [-c ${buildout:directory}/production/nginx.conf]


# Version pindowns for new style products go here - this section extends one provided in http://dist.plone.org/release/
[versions]
